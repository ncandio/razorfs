# Optimized RazorFS Testing Dockerfile - Corrected Version with Directory Check
# Tests the new O(log n) performance improvements

FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV DOCKER_ENV=true

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    make \
    libfuse3-dev \
    fuse3 \
    e2fsprogs \
    btrfs-progs \
    python3 \
    python3-pip \
    python3-matplotlib \
    python3-pandas \
    python3-seaborn \
    time \
    procps \
    util-linux \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Configure FUSE
RUN echo 'user_allow_other' >> /etc/fuse.conf

# Create directories
RUN mkdir -p /results /mnt/ext4_test /mnt/btrfs_test /tmp/razor_mount

# Set working directory
WORKDIR /razor_repo

# Copy the entire repository
COPY . /razor_repo/

# Debug: Check what was copied
RUN echo "=== Checking repository structure ===" && \
    pwd && \
    echo "=== Root directory contents ===" && \
    ls -la && \
    echo "=== Checking for fuse directory ===" && \
    if [ -d "fuse" ]; then \
        echo "✅ fuse directory found:" && \
        ls -la fuse/; \
    else \
        echo "❌ fuse directory NOT found"; \
        echo "=== Searching for fuse directories ===" && \
        find . -name "fuse" -type d 2>/dev/null || echo "No fuse directories found"; \
    fi && \
    echo "=== Checking for Makefile ===" && \
    if [ -f "Makefile" ]; then \
        echo "✅ Makefile found:" && \
        ls -la Makefile; \
    else \
        echo "❌ Makefile NOT found"; \
        echo "=== Searching for Makefiles ===" && \
        find . -name "Makefile" -type f 2>/dev/null || echo "No Makefiles found"; \
    fi

# Install Python dependencies
RUN pip3 install pandas matplotlib seaborn

# Build optimized RazorFS with directory check
RUN echo "=== Building RazorFS ===" && \
    if [ -d "fuse" ]; then \
        echo "Building FUSE implementation..." && \
        cd fuse && \
        make clean && \
        make all && \
        cd .. && \
        echo "✅ FUSE implementation built successfully"; \
    elif [ -f "Makefile" ]; then \
        echo "Building with root Makefile..." && \
        make clean && \
        make userspace && \
        echo "✅ Core library built successfully"; \
    else \
        echo "❌ Cannot build - neither fuse directory nor Makefile found" && \
        exit 1; \
    fi