# Optimized RazorFS Testing Dockerfile - Direct Compilation Version
# Tests the new O(log n) performance improvements

FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV DOCKER_ENV=true

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    make \
    libfuse3-dev \
    fuse3 \
    e2fsprogs \
    btrfs-progs \
    reiserfsprogs \
    python3 \
    python3-pip \
    python3-matplotlib \
    python3-pandas \
    python3-seaborn \
    time \
    procps \
    util-linux \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Configure FUSE
RUN echo 'user_allow_other' >> /etc/fuse.conf

# Create directories
RUN mkdir -p /results /mnt/ext4_test /mnt/btrfs_test /mnt/reiserfs_test /tmp/razor_mount

# Set working directory
WORKDIR /razor_repo

# Copy the entire repository
COPY . /razor_repo/

# Debug: Check what was copied
RUN echo "=== Checking repository structure ===" && \
    ls -la /razor_repo/ && \
    echo "=== Checking src directory ===" && \
    ls -la /razor_repo/src/ && \
    echo "=== Checking tools directory ===" && \
    ls -la /razor_repo/tools/ && \
    echo "=== Checking fuse directory ===" && \
    ls -la /razor_repo/fuse/

# Install Python dependencies
RUN pip3 install pandas matplotlib seaborn

# Build optimized RazorFS directly without Makefile
RUN echo "Building RazorFS core library directly..." && \
    cd /razor_repo && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -c src/razor_core.c -o src/razor_core.o && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -c src/razor_write.c -o src/razor_write.o && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -c src/razor_transaction_log.c -o src/razor_transaction_log.o && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -c src/razor_permissions.c -o src/razor_permissions.o && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -c src/razor_sync.c -o src/razor_sync.o && \
    ar rcs librazer.a src/razor_core.o src/razor_write.o src/razor_transaction_log.o src/razor_permissions.o src/razor_sync.o && \
    echo "Building tools..." && \
    gcc -Wall -Wextra -g -O2 -fPIC -pthread -I. -Isrc -Itools tools/razorfsck_main.c tools/razorfsck.c tools/razorfsck_repair.c -L. -lrazer -o razorfsck && \
    echo "Building FUSE implementation..." && \
    cd /razor_repo/fuse && \
    g++ -std=c++17 -O3 -Wall -Wextra -march=native $(pkg-config fuse3 --cflags) -o razorfs_fuse razorfs_fuse.cpp ../src/razor_core.o ../src/razor_write.o ../src/razor_transaction_log.o ../src/razor_permissions.o ../src/razor_sync.o $(pkg-config fuse3 --libs) -lpthread && \
    echo "RazorFS built successfully"

# Set entrypoint
ENTRYPOINT ["/razor_repo/razorfs_windows_testing/optimized_filesystem_comparison.sh"]