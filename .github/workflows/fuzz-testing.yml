name: "Fuzz Testing Security"

on:
  workflow_dispatch:
    inputs:
      runtime:
        description: 'Fuzzing runtime in seconds'
        required: true
        default: '300'
        type: number
      target:
        description: 'Fuzzing target'
        required: true
        default: 'path_parsing'
        type: choice
        options:
        - path_parsing
        - string_table
        - nary_tree
      branch:
        description: 'Branch to fuzz'
        required: true
        default: 'main'

jobs:
  fuzz-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install AFL++
      run: |
        sudo apt-get update
        sudo apt-get install -y afl++ pkg-config libfuse3-dev zlib1g-dev

    - name: Configure system for AFL fuzzing
      run: |
        # Fix core_pattern for AFL
        echo core | sudo tee /proc/sys/kernel/core_pattern
        # Disable CPU frequency scaling
        echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor || true

    - name: Compile with afl-clang-fast
      run: |
        mkdir fuzz-build
        cd fuzz-build
        # Use the Makefile to build the project for fuzzing
        make -C .. debug
        # Create fuzzer for path parsing specifically
        echo '#include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        #include "../src/nary_tree_mt.h"
        
        int main(int argc, char **argv) {
            struct nary_tree_mt tree;
            nary_tree_mt_init(&tree);
            
            if (argc > 1) {
                // Fuzz path lookup function for security issues
                uint16_t result = nary_path_lookup_mt(&tree, argv[1]);
            }
            nary_tree_mt_destroy(&tree);
            return 0;
        }' > path_fuzzer.c
        
        afl-clang-fast -D_FILE_OFFSET_BITS=64 -I../src -I/usr/include/fuse3 path_fuzzer.c ../src/nary_tree_mt.c ../src/string_table.c -o path_fuzzer -lpthread -lz -lfuse3

    - name: Run afl-fuzz on path parsing
      run: |
        cd fuzz-build
        mkdir -p input_corpus
        echo "/test" > input_corpus/test1
        echo "/test/../etc/passwd" > input_corpus/test2
        echo "/././test" > input_corpus/test3
        echo "/test/../../../" > input_corpus/test4
        echo "" > input_corpus/empty
        echo "../../../../../../../../../../../../etc/passwd" > input_corpus/test5

        export AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1
        timeout 300 afl-fuzz -i input_corpus -o findings -m none ./path_fuzzer @@ || echo "Fuzzing completed or timed out"