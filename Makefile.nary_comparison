# Makefile for N-ary Tree vs Flat Array Performance Comparison

CXX = g++
CXXFLAGS = -std=c++17 -O3 -Wall -Wextra -march=native

# Cache optimization flags
CACHE_OPTIMIZE_FLAGS = -falign-functions=64 -falign-loops=64 -falign-labels=64 -falign-jumps=64
CACHE_OPTIMIZE_FLAGS += -fno-omit-frame-pointer -fno-plt
CACHE_OPTIMIZE_FLAGS += -march=native -mtune=native

# Performance flags
PERF_FLAGS = -DNDEBUG -ffast-math -funroll-loops

# Include directories
INCLUDES = -I.

# All flags combined
ALL_FLAGS = $(CXXFLAGS) $(CACHE_OPTIMIZE_FLAGS) $(PERF_FLAGS) $(INCLUDES)

# Targets
TARGET = nary_vs_flat_comparison
SOURCES = test_nary_vs_flat_performance.cpp

.PHONY: all clean run test profile

all: $(TARGET)

$(TARGET): $(SOURCES)
	@echo "🔨 Building N-ary Tree vs Flat Array comparison..."
	$(CXX) $(ALL_FLAGS) -o $@ $<
	@echo "✅ Build complete!"

run: $(TARGET)
	@echo "🚀 Running performance comparison..."
	./$(TARGET)

test: run

profile: clean
	@echo "📊 Building with profile generation..."
	$(CXX) $(CXXFLAGS) $(CACHE_OPTIMIZE_FLAGS) $(INCLUDES) -fprofile-generate -o $(TARGET) $(SOURCES)
	@echo "🏃 Running for profile data collection..."
	./$(TARGET)
	@echo "🔧 Rebuilding with profile optimization..."
	$(CXX) $(ALL_FLAGS) -fprofile-use -o $(TARGET) $(SOURCES)
	@echo "🚀 Running optimized version..."
	./$(TARGET)

benchmark: $(TARGET)
	@echo "⏱️  Running detailed benchmark..."
	@for i in {1..5}; do \
		echo "Run $$i/5:"; \
		./$(TARGET); \
		echo ""; \
	done

clean:
	@echo "🧹 Cleaning up..."
	rm -f $(TARGET)
	rm -f *.profdata *.profraw
	rm -f *.gcda *.gcno

install-deps:
	@echo "📦 Installing dependencies..."
	@echo "No additional dependencies required for this comparison"

help:
	@echo "Available targets:"
	@echo "  all      - Build the comparison program"
	@echo "  run      - Build and run comparison"
	@echo "  test     - Alias for run"
	@echo "  profile  - Build with profile-guided optimization"
	@echo "  benchmark- Run multiple times for statistical analysis"
	@echo "  clean    - Remove build artifacts"
	@echo "  help     - Show this help message"

# Analysis targets
analyze-cache:
	@echo "🧠 Cache analysis would require perf tools:"
	@echo "  perf stat -e cache-misses,cache-references ./$(TARGET)"

analyze-memory:
	@echo "💾 Memory analysis would require valgrind:"
	@echo "  valgrind --tool=massif ./$(TARGET)"